name: CMake on multiple platforms

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang]
        cpp_compiler: [g++, clang++]
        include:
          - os: windows-latest
            c_compiler: gcc
            cpp_compiler: g++

    steps:
    - name: Checkout repository with submodules
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Set build output dir
      id: strings
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    #################################
    # Linux-specific setup
    #################################
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y build-essential cmake libgl1-mesa-dev libx11-dev

    - name: Clean build directory (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: rm -rf ${{ steps.strings.outputs.build-output-dir }}

    #################################
    # Windows-specific setup
    #################################
    - name: Install MinGW (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install mingw --no-progress
        echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" >> $env:GITHUB_PATH

    - name: Clean build directory (Windows)
      if: matrix.os == 'windows-latest'
      run: Remove-Item -Path "${{ steps.strings.outputs.build-output-dir }}" -Recurse -Force -ErrorAction SilentlyContinue

    #################################
    # Configure CMake
    #################################
    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -G "${{ matrix.os == 'windows-latest' && 'MinGW Makefiles' || 'Unix Makefiles' }}"
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    #################################
    # Build project
    #################################
    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    #################################
    # Run tests
    #################################
    - name: Run tests
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
